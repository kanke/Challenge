{"version":3,"file":"codingtest.min.js","names":[],"mappings":"","sources":["codingtest.min.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nangular.module(\"codingtest.partials\",[]).run([\"$templateCache\",function(e){e.put(\"expenses-content.html\",'<div ng-controller=\"ctrlExpenses\"><h2>Expenses</h2><div bookmarklist=\"\" id=\"bookmarks\" class=\"section-list\"></div><h3>Add an expense</h3><form name=\"expensesform\"><ul><li><label>Date</label> <input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.date\" ui-date=\"dateOptions\" placeholder=\"dd/mm/yyyy\"></li><li><label>Amount</label> <input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.amount\" placeholder=\"00.00\"></li><li><label>Reason</label><div auto-resize-form=\"\" resize-watches=\"newExpense.reason\" resize-sources=\"textarea\" class=\"auto-resize\"><textarea ng-required=\"true\" ng-model=\"newExpense.reason\" ng-trim=\"false\" placeholder=\"why oh why?\"></textarea></div></li><li><label></label> <button ng-click=\"saveExpense()\" class=\"solid\">Save Expense</button> <button ng-click=\"clearExpense()\">cancel</button></li></ul></form><h3>Submitted expenses</h3><div class=\"list-table expenses-data\"><div class=\"header-row\"><div>Date</div><div class=\"figures\">Amount (inc. VAT)</div><div class=\"figures\">Reson</div></div><div ng-repeat=\"expense in expenses\" class=\"body-row\"><div>{{expense.date | date:\\'dd MMM yyyy\\'}}</div><div class=\"figures\">{{expense.amount | currency:\"&pound;\"}}</div><div class=\"figures\">{{expense.reason}}</div></div></div></div>')}]);\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n/******************************************************************************************\n\nAlchemytec Coding Test for Expenses Back End\n\n******************************************************************************************/\n\n// App files\nrequire(\"../shared/app-partials.js\");\nrequire(\"../shared/navigation/navigation-controllers.js\");\nrequire(\"../shared/navigation/navigation-directives.js\");\nrequire(\"../shared/information/version-controller.js\");\nrequire(\"../shared/forms/resize-directives.js\");\nrequire(\"./app-partials.js\");\nrequire(\"./expenses/main.js\");\n\n// Declare app level module which depends on filters, and services\nvar app = angular.module(\"alcExpenses\", [\n\t\"ngRoute\",\n\t\"ngAnimate\",\n\t\"ngSanitize\",\n\t\"restangular\",\n\t\"ui.date\",\n\t\"alchemytec.directives\",\n\t\"alchemytec.filters\",\n\t\"alchemytec.animations\",\n\t\"shared.partials\",\n\t\"codingtest.partials\",\n\t\"navigation.directives\",\n\t\"navigation.controllers\",\n\t\"resize.directives\",\n\t\"version.controller\",\n\t\"expenses.controllers\"\n]);\n\napp.config([\"$routeProvider\", function($routeProvider) {\n\t// Global routes\n\t$routeProvider.when(\"/version\", { templateUrl: \"version-content.html\" });\n}]);\n\napp.run([\"$rootScope\", function($rootScope) {\n\t// Basic config options\n\tvar gulpBuildConfig = {version: '2.0.0', builddate: new Date(1422368649055)};\n\t$rootScope.config = angular.extend({ angular: angular.version.full }, gulpBuildConfig);\n\t\n\t// Headings used by the menu bars\n\t$rootScope.mainTitle = \"\";\n\t$rootScope.mainHeading = \"\";\n\t\n\t// Sections of content are used for bookmark navigation\n\t$rootScope.contentSections = [];\n\t\n\t// App sections are distinct areas of the website\n\t// These will ultimately be retrieved from the server\n\t$rootScope.appSections = $rootScope.appSections || [];\n\t\n\t// Initialise tab sections\n\t$rootScope.tabSections = $rootScope.tabSections || {};\n\t$rootScope.currentSection = [];\n\t$rootScope.selectTabSection = function(currentSection, selectedIndex) {\n\t\tif ($rootScope.tabSections[currentSection]) {\n\t\t\t$rootScope.currentSection = angular.copy($rootScope.tabSections[currentSection]);\n\t\t\t\n\t\t\tfor (var u = 0; u < $rootScope.currentSection.length; u++) {\n\t\t\t\tif (u == selectedIndex)\n\t\t\t\t\t$rootScope.currentSection[u].active = true;\n\t\t\t\telse\n\t\t\t\t\t$rootScope.currentSection[u].active = false;\n\t\t\t}\n\t\t}\n\t};\n}]);\n\n// Bootstrap the app\n$(document).ready(function() {\n\tangular.bootstrap(\"body\", [\"alcExpenses\"]);\n});\n\n},{\"../shared/app-partials.js\":5,\"../shared/forms/resize-directives.js\":6,\"../shared/information/version-controller.js\":7,\"../shared/navigation/navigation-controllers.js\":8,\"../shared/navigation/navigation-directives.js\":9,\"./app-partials.js\":1,\"./expenses/main.js\":4}],3:[function(require,module,exports){\n\"use strict\";\n\n/******************************************************************************************\n\nExpenses controller\n\n******************************************************************************************/\n\nvar app = angular.module(\"expenses.controller\", []);\n\napp.controller(\"ctrlExpenses\", [\"$rootScope\", \"$scope\", \"Restangular\", function ExpensesCtrl($rootScope, $scope, $Restangular) {\n\t// Update the headings\n\t$rootScope.mainTitle = \"Expenses\";\n\t$rootScope.mainHeading = \"Expenses\";\n\t\n\t// Update the tab sections\n\t$rootScope.selectTabSection(\"expenses\", 0);\n\t\n\t$scope.dateOptions = {\n\t\tchangeMonth: true,\n\t\tchangeYear: true,\n\t\tdateFormat: \"dd/mm/yy\"\n\t};\n\n\tvar loadExpenses = function() {\n\t\t// Retrieve a list of expenses via REST\n\t\t$Restangular.one(\"expenses\").getList().then(function(expenses) {\n\t\t\t$scope.expenses = expenses;\n\t\t});\n\t}\n\n\t$scope.saveExpense = function() {\n\t\tif ($scope.expensesform.$valid) {\n\t\t\t// Post the expense via REST\n\t\t\t$Restangular.one(\"expenses\").post(null, $scope.newExpense).then(function() {\n\t\t\t\t// Reload new expenses list\n\t\t\t\tloadExpenses();\n\t\t\t});\n\t\t}\n\t};\n\n\t$scope.clearExpense = function() {\n\t\t$scope.newExpense = {};\n\t};\n\n\t// Initialise scope variables\n\tloadExpenses();\n\t$scope.clearExpense();\n}]);\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\n/******************************************************************************************\n\nTasks main\n\n******************************************************************************************/\n\nrequire(\"./expenses-controller.js\");\n\nvar app = angular.module(\"expenses.controllers\", [\n\t\"expenses.controller\"\n]);\n\napp.config([\"$routeProvider\", function($routeProvider) {\n\t// Labour analysis routes\n\t$routeProvider.when(\"/expenses\", { templateUrl: \"expenses-content.html\" });\n\t\n\t$routeProvider.otherwise({redirectTo: \"/expenses\"});\n}]);\n\napp.run([\"$rootScope\", function($rootScope) {\n\t// Add app button\n\t$rootScope.appSections = $rootScope.appSections || [];\n\t$rootScope.appSections.push({ title: \"Expenses\", image: \"/static/img/icon-generic.png\", app: \"expenses\" });\n\t\n\t// Configure tab sections\n\t$rootScope.tabSections = $rootScope.tabSections || {};\n\t$rootScope.tabSections.expenses = [\n\t\t{ title: \"Expenses\", app: \"expenses\" }\n\t];\n}]);\n\n},{\"./expenses-controller.js\":3}],5:[function(require,module,exports){\nangular.module(\"shared.partials\",[]).run([\"$templateCache\",function(i){i.put(\"navbar-subbar.html\",'<div ng-controller=\"ctrlSubNavigation\"><div slidein=\"\" ng-controller=\"ctrlSubNavigation\" min-scroll=\"minShowOffset()\" slide-speed=\"250\" class=\"navigation-bar fixed-navigation-bar\"><div slide-direction=\"up\" slide-speed=\"250\" class=\"navigation-container\"><h1>{{mainHeading}}</h1><div class=\"icon-bar\"><div ng-repeat=\"section in contentSections\" ng-click=\"scrollToSection($index)\" class=\"text-link clickable\">{{section.text}}</div><div class=\"icon clickable\" clicktoggle=\"#section-menu\" hide-on=\"scroll,click\"><i class=\"fa fa-bars\"></i></div></div></div></div><div id=\"section-menu\" class=\"section-popup\"><ul><li ng-repeat=\"section in contentSections\" ng-click=\"scrollToSection($index)\" class=\"clickable\">{{section.text}}</li></ul></div><div slidein=\"\" ng-controller=\"ctrlSubNavigation\" min-scroll=\"minShowOffset()\" slide-direction=\"up\" slide-speed=\"250\" class=\"navigation-bar fixed-navigation-bar bottom\"><div class=\"navigation-container\"><div class=\"icon clickable\" ng-click=\"scrollToTop()\"><i class=\"icon home\"></i></div></div></div></div>'),i.put(\"navbar.html\",'<div ng-controller=\"ctrlNavigation\" class=\"navigation-bar top-navigation-bar\"><div class=\"navigation-container\"><div class=\"icon-bar mobile\"><div class=\"icon clickable\" clicktoggle=\"#app-menu\" hide-on=\"scroll,click\" target-position=\"left\"><i class=\"fa fa-bars\"></i></div></div><div class=\"logo\"><a click-to-window=\"\" ng-href=\"#/\"></a></div><h1>{{mainTitle}}</h1><div id=\"search-bar\" class=\"search-bar\"><div class=\"icon clickable\"><i class=\"fa fa-search\"></i></div><div class=\"search-field\"><input ng-model=\"searchtext\" placeholder=\"enter search text\"></div></div><div class=\"icon-bar\"><div class=\"icon clickable\" searchbar=\"#search-bar\"><i class=\"fa fa-search\"></i></div><div class=\"icon clickable\" clicktoggle=\"#app-menu\" hide-on=\"scroll,click\" target-position=\"center\"><i class=\"fa fa-bars\"></i></div><div class=\"icon clickable\" clicktoggle=\"#notification-menu\" hide-on=\"scroll,click\" target-position=\"right\"><i class=\"fa fa-bell\"></i></div><div class=\"icon clickable\" clicktoggle=\"#user-menu\" hide-on=\"scroll,click\" target-position=\"right\"><div class=\"user\"><i class=\"fa fa-circle\"></i><span>SK</span></div></div></div></div><div id=\"app-menu\" class=\"app-popup\"><div ng-repeat=\"app in appSections | orderBy:[\\'level\\', \\'title\\']\" class=\"app-icon\"><a click-to-window=\"\" ng-href=\"#/{{app.app}}\"><img ng-src=\"{{app.image}}\"><span>{{app.title}}</span></a></div></div><div id=\"notification-menu\" class=\"app-popup text-list\"><ul><li>4 Notifications</li><li class=\"seperator\"></li><li><span class=\"index\">1</span><span class=\"notification\">Jack Torrance has begun writing a lengthy novel using an old typewriter</span><i class=\"fa fa-chevron-right\"></i></li><li><span class=\"index\">2</span><span class=\"notification\">Danny Torrance has been riding his tricycle around the hotel</span><i class=\"fa fa-chevron-right\"></i></li><li><span class=\"index\">3</span><span class=\"notification\">Jack Torrance has had a vision at the bar in the ballroom</span><i class=\"fa fa-chevron-right\"></i></li><li><span class=\"index\">4</span><span class=\"notification\">Jack Torrance has purchased a nice shiny axe and is using catch phrases from a TV show</span><i class=\"fa fa-chevron-right\"></i></li></ul></div><div id=\"user-menu\" class=\"app-popup text-list\"><ul><li>Stanley Kubrick<span class=\"email\">stanley.kubrick@gmail.com</span></li><li class=\"seperator\"></li><li>Account</li><li>Setting</li><li class=\"seperator\"></li><li>Sign out</li></ul></div></div>'),i.put(\"tab-header.html\",'<div ng-controller=\"ctrlViewNavigation\" class=\"tab-bar\"><ul><li ng-repeat=\"tab in currentSection\" class=\"text-link clickable\" ng-click=\"changeTabView($index)\" ng-class=\"tab.active? \\'current\\' : \\'\\'\"><a ng-href=\"#/{{tab.app}}\">{{tab.title}}</a></li></ul></div>'),i.put(\"version-content.html\",'<div ng-controller=\"ctrlVersion\"><h2>Version</h2><div class=\"table-holder centered\"><div class=\"filter-container\"><div class=\"date\"><label>Application:</label> {{ config.version }}</div><div class=\"date\"><label>Angular.js:</label> {{ config.angular }}</div><div class=\"date\"><label>Build date:</label> {{ config.builddate | date:\\'dd/mm/yy hh:mm\\' }}</div></div></div><div bookmarklist=\"\" id=\"bookmarks\" class=\"section-list\"></div></div>')}]);\n},{}],6:[function(require,module,exports){\n/******************************************************************************************\n\nAngular Directives for resizing controls\n\n******************************************************************************************/\n\nvar app = angular.module(\"resize.directives\", []);\n\n// The auto-resize-form watches models for changes and resizes content to fit, usually used where a textarea exists\n// Usage: <div auto-resize-form resize-watches=\"comment,someFunc()\" resize-sources=\"textarea,button\"></div>\n//\tthis will watch $scope.comment and $scope.someFunc() then resize the div to fit using the heights of all textarea and button elements\n// NB: textareas should have ngTrim set to false\napp.directive(\"autoResizeForm\", [\"$timeout\", function($timeout) {\n\tvar link = function($scope, element, attrs, ngModel) {\n\t\tif (!attrs.resizeWatches)\n\t\t\treturn console.log(\"Nothing for auto-resize-form to watch :(\");\n\t\t\n\t\tvar resizeWatches = (attrs.resizeWatches || \"comment\").split(\",\");\n\t\tvar resizeSources = (attrs.resizeSources || \"textarea\").split(\",\");\n\t\tvar minAreaHeight = 10;\n\t\tvar timerShrinkTextAreas = null;\n\t\t\n\t\tvar resizeElements = function(newValue, oldValue) {\n\t\t\t// If its a string that has changed, it could be the textarea, which may need shrinking\n\t\t\tif ((typeof(newValue) == \"string\") && (typeof(oldValue) == \"string\")) {\n\t\t\t\tif (newValue.length < oldValue.length) {\n\t\t\t\t\tif (timerShrinkTextAreas)\n\t\t\t\t\t\t$timeout.cancel(timerShrinkTextAreas);\n\t\t\t\t\t\n\t\t\t\t\ttimerShrinkTextAreas = $timeout(function() {\n\t\t\t\t\t\ttimerShrinkTextAreas = null;\n\n\t\t\t\t\t\tangular.forEach(resizeSources, function(value, key) {\n\t\t\t\t\t\t\tif (value.prop(\"tagName\") == \"TEXTAREA\") {\n\t\t\t\t\t\t\t\tvalue.height(minAreaHeight);\n\t\t\t\t\t\t\t\tvalue.height(value.prop(\"scrollHeight\") - (value.outerHeight() - value.height()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 500);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// This ensures elements are updated and DOM should be up to date\n\t\t\t$timeout(function() {\n\t\t\t\tvar newHeight = 0;\n\t\t\t\t\n\t\t\t\tangular.forEach(resizeSources, function(value, key) {\n\t\t\t\t\tif (value.prop(\"tagName\") == \"TEXTAREA\") {\n\t\t\t\t\t\tvar areaOldHeight = value.height();\n\t\t\t\t\t\tvar areaScrollHeight = value.prop(\"scrollHeight\");\n\t\t\t\t\t\tvar areaNewHeight = areaScrollHeight - (value.outerHeight() - areaOldHeight);\n\n\t\t\t\t\t\tnewHeight += areaScrollHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (areaOldHeight != areaNewHeight)\n\t\t\t\t\t\t\tvalue.height(areaNewHeight);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewHeight += value.outerHeight();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\telement.stop();\n\t\t\t\tif (newHeight < element.height())\n\t\t\t\t\telement.animate({ height: newHeight });\n\t\t\t\telse\n\t\t\t\t\telement.height(newHeight);\n\t\t\t}, 0);\n\t\t};\n\t\t\n\t\tangular.forEach(resizeWatches, function(value, key) {\n\t\t\t$scope.$watch(value, resizeElements);\n\t\t});\n\t\t\n\t\tangular.forEach(resizeSources, function(value, key) {\n\t\t\tresizeSources[key] = element.find(value);\n\t\t\tif (resizeSources[key].prop(\"tagName\") == \"TEXTAREA\")\n\t\t\t\tminAreaHeight = resizeSources[key].height();\n\t\t});\n\t};\n\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: link\n\t};\n}] );\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\n/******************************************************************************************\n\nVersion controller\n\n******************************************************************************************/\n\nvar app = angular.module(\"version.controller\", [\"ngRoute\"]);\n\n// The version controller\napp.controller(\"ctrlVersion\", [\"$rootScope\", \"$scope\", function VersionCtrl($rootScope, $scope) {\n\t// Update the headings\n\t$rootScope.mainTitle = \"About this web application\";\n\t$rootScope.mainHeading = \"About this web application\";\n\t\n\tif (!$rootScope.tabSections.version) {\n\t\t$rootScope.tabSections.version = [\n\t\t\t{ title: \"Version\", app: \"version\" }\n\t\t];\n\t}\n\t\n\t// Update the tab sections\n\t$rootScope.selectTabSection(\"version\", 0);\n\t\n\tconsole.log(angular.version, angular.version.full);\n\tconsole.log($rootScope.config.version);\n\tconsole.log($rootScope.config.builddate);\n}]);\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\n/******************************************************************************************\n\nNavigation controllers\n\n******************************************************************************************/\n\nvar app = angular.module(\"navigation.controllers\", [\"ngRoute\"]);\n\n// The main navigation menu appears at the top of the page and generally carries non-page specific links\napp.controller(\"ctrlNavigation\", [\"$rootScope\", \"$scope\", \"$location\", function NavigationCtrl($rootScope, $scope, $location) {\n\t$scope.searching = false;\n\t$scope.searchtext = \"\";\n\n\t$scope.clickShowSearch = function() {\n\t\t$scope.searching = true;\n\t\t$scope.oldTitle = $rootScope.mainTitle;\n\t\t$rootScope.mainTitle = \"Search\";\n\t};\n\t\n\t$scope.clickHideSearch = function() {\n\t\t$scope.searching = false;\n\t\t$rootScope.mainTitle = $scope.oldTitle;\n\t};\n}]);\n\n\n// The sub navigation menu appears when a page has scrolled down beyond the main menu\napp.controller(\"ctrlSubNavigation\", [\"$rootScope\", \"$scope\", \"$timeout\", function SubNavigationCtrl($rootScope, $scope, $timeout) {\n\t// Rebuild the bookmark section links\n\tvar updateBookmarks = function() {\n\t\t// Shift this to the next digest so we know the DOM is loaded\n\t\t$timeout(function() {\n\t\t\t$rootScope.contentSections = [];\n\t\t\t\n\t\t\tangular.forEach(angular.element(\"#content > ng-view\").last().children(\"div\").children(\"h3\"), function(value, key) {\n\t\t\t\tvar $this = angular.element(value);\n\t\t\t\t\n\t\t\t\t$rootScope.contentSections.push({ text: $this.text().replace(/\\([^)]*\\)/g, \"\"), element: $this });\n\t\t\t});\n\t\t}, 0);\n\t};\n\n\t$rootScope.$on(\"$viewContentLoaded\", updateBookmarks);\n\t$scope.$on(\"navigation-updatelinks\", updateBookmarks);\n\n\t// Scroll to the top of the page\n\t$scope.scrollToTop = function(index) {\n\t\tangular.element(\"body, html\").animate({ scrollTop: 0 }, 500);\n\t};\n\t\n\t// Scroll to a specific page section\n\t$scope.scrollToSection = function(index) {\n\t\tangular.element(\"body, html\").animate({ scrollTop: $rootScope.contentSections[index].element.offset().top - angular.element(\".top-navigation-bar\").outerHeight() - 20 }, 500);\n\t};\n\t\n\t// Return the bottom of the section list bookmarks\n\t$scope.minShowOffset = function() {\n\t\tvar bookmarkElement = angular.element(\"#bookmarks\");\n\t\t\n\t\tif (!bookmarkElement.length)\n\t\t\tbookmarkElement = angular.element(\"#content\");\n\n\t\treturn bookmarkElement.height() + bookmarkElement.offset().top;\n\t};\n}]);\n\n// The tab navigation menu appears near the top of the page and generally carries page specific links\napp.controller(\"ctrlViewNavigation\", [\"$rootScope\", \"$scope\", \"$location\", function ViewNavigationCtrl($rootScope, $scope, $location) {\n\t// Change main content app\n\t$scope.changeTabView = function(index) {\n\t\tif ($rootScope.currentSection[index].app) {\n\t\t\t$location.path(\"/\" + $rootScope.currentSection[index].app);\n\t\t}\n\t};\n}]);\n\n},{}],9:[function(require,module,exports){\n/******************************************************************************************\n\nAngular Directives for the navigation app\n\n******************************************************************************************/\n\nvar app = angular.module(\"navigation.directives\", []);\n\n// The bookmarklist directive adds a clickable bookmark list to an element\n// Usage: <div bookmarklist></div>\n//\tthis will fill the list with an unordered list of clickable bookmark elements taken from any h3's directly decended from the content container\napp.directive(\"bookmarklist\", [\"$compile\", function($compile) {\n\tvar link = function($scope, element, attrs, ngModel) {\n\t\tvar contentList = angular.element(\"<ul></ul>\");\n\t\tvar contentSections = [];\n\t\tvar searchContainer = angular.element(\"#content > ng-view\").last().children(\"div\");\n\t\t\n\t\t// Scroll to a specific page section\n\t\t$scope.scrollToSection = function(index) {\n\t\t\tangular.element(\"body, html\").animate({ scrollTop: contentSections[index].element.offset().top - angular.element(\".top-navigation-bar\").outerHeight() - 20 }, 500);\n\t\t};\n\n\t\t// Build the section list\n\t\tvar buildSectionList = function() {\n\t\t\tcontentList.empty();\n\t\t\tcontentSections = [];\n\n\t\t\tangular.forEach(searchContainer.children(\"h3\"), function(value, key) {\n\t\t\t\tvar $this = angular.element(value);\n\t\t\t\tvar listItem = angular.element(\"<li class='clickable' ng-click='scrollToSection(\" + contentSections.length + \")'>\" + $this.text().replace(/\\([^)]*\\)/g, \"\") + \"</li>\");\n\t\t\t\t\n\t\t\t\tcontentList.append(listItem);\n\t\t\t\tcontentSections.push({ text: $this.text(), element: $this });\n\t\t\t});\n\t\t};\n\t\t\n\t\t$scope.$on(\"navigation-updatelinks\", buildSectionList);\n\t\tbuildSectionList();\n\t\t\n\t\t// Add the list to the DOM\n\t\t$compile(contentList.contents())($scope);\n\t\telement.append(contentList);\n\t};\n\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: link\n\t};\n}] );\n\n\n// The searchbar directive shows and hides the search box\n// Usage: <div class=\"icon clickable\" searchbar=\"#search-bar\"><i class=\"fa fa-search\"></i></div>\n//\tthis would show and hide the search bar when clicking this element\napp.directive(\"searchbar\", [\"$timeout\", function($timeout) {\n\tvar getSearchWidth = function(searchBar) {\n\t\tvar heading = angular.element(\".top-navigation-bar > .navigation-container h1\");\n\n\t\treturn angular.element(\".top-navigation-bar > .navigation-container\").outerWidth()\n\t\t\t/*- angular.element(\".top-navigation-bar > .navigation-container .logo\").outerWidth()\n\t\t\t- parseInt(angular.element(\".top-navigation-bar > .navigation-container .logo\").css(\"marginRight\"), 10)*/\n\t\t\t- heading.outerWidth()\n\t\t\t- parseInt(heading.css(\"marginLeft\"), 10)\n\t\t\t- parseInt(heading.css(\"marginRight\"), 10)\n\t\t\t- parseInt(searchBar.css(\"right\"), 10);\n\t};\n\n\tvar link = function($scope, element, attrs) {\n\t\tvar $window = angular.element(window);\n\t\tvar searchBar = angular.element(attrs.searchbar || \"#search-bar\");\n\t\tvar searchButton = element;\n\t\tvar searchHideButton = searchBar.find(\".icon\");\n\t\tvar mainLogo = angular.element(\".top-navigation-bar div.logo\");\n\t\tvar mainLogoWidth = parseInt(mainLogo.css(\"width\"), 10);\n\t\t\n\t\tvar showSearchBar = function() {\n\t\t\tsearchButton.hide();\n\t\t\tsearchBar.show();\n\t\t\t\n\t\t\t$timeout(function() {\n\t\t\t\t$scope.mainTitle = \"Search\";\n\t\t\t\t\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tmainLogo.animate({ width: 0 }, 500, \"linear\");\n\t\t\t\t\tsearchBar.animate({ width: getSearchWidth(searchBar) }, 500, \"linear\", function() {\n\t\t\t\t\t\tsearchBar.find(\"input\").focus();\n\t\t\t\t\t});\n\t\t\t\t}, 0);\n\t\t\t}, 0);\n\t\t};\n\t\t\n\t\tvar hideSearchBar = function() {\n\t\t\tsearchBar.find(\"input\").blur();\n\t\t\tsearchBar.animate({ width: 42 }, 500, \"linear\", function() {\n\t\t\t\tsearchBar.fadeOut();\n\t\t\t\tsearchButton.show();\n\t\t\t});\n\t\t\tmainLogo.animate({ width: mainLogoWidth }, 500, \"linear\");\n\t\t\t\n\t\t\t$timeout(function() {\n\t\t\t\tdelete $scope.mainTitle;\n\t\t\t}, 0);\n\t\t};\n\t\t\n\t\tsearchButton.click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\t\n\t\t\tshowSearchBar();\n\t\t});\n\t\t\n\t\tsearchBar.click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t});\n\t\t\n\t\tsearchHideButton.click(function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\thideSearchBar();\n\t\t});\n\t\t\n\t\t$window.resize(function() {\n\t\t\tsearchBar.css({ width: getSearchWidth(searchBar) });\n\t\t});\n\t\t\n\t\t$window.click(function() {\n\t\t\thideSearchBar();\n\t\t});\n\t};\n\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: link\n\t};\n}]);\n\n},{}]},{},[2]);\n"],"sourceRoot":"/source/"}